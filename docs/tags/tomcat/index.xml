<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tomcat on My personal blog</title>
    <link>/tags/tomcat.html</link>
    <description>Recent content in tomcat on My personal blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Dec 2009 17:22:16 +0000</lastBuildDate><atom:link href="/tags/tomcat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>handling a few thousand simultaneous connections in TIBCO BusinessWorks</title>
      <link>/2009/12/08/handling-a-few-thousand-simultaneous-connections-in-tibco-businessworks.html</link>
      <pubDate>Tue, 08 Dec 2009 17:22:16 +0000</pubDate>
      
      <guid>/2009/12/08/handling-a-few-thousand-simultaneous-connections-in-tibco-businessworks.html</guid>
      <description>Scaling with TIBCO BusinessWorks can sometimes be a bit tricky. Recently I began testing some scenarios how to scale a Webservice a bit larger. The first source of information was of course the official documentation and to look at the proposed best practice values for such an engine.
To start small, I tried a HTTP Receiver with a 32bit JVM runtime. I set the heap to the maximum amount possible (something about 1.</description>
    </item>
    
  </channel>
</rss>
